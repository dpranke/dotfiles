#!/bin/bash
if [ -n "$1" ]
then
  if [ "$1" == "-h" -o "$1" == "--help" ]
  then
    echo "usage: gsync [-h|--help] [view]"
    exit 1
  fi

  if [ ! -d "$src/$1" ]
  then
    echo "no such view $1: '$src/$1' does not exist"
    exit 1
  fi
  view=$1
  csrc=$src/$view/src
  wk=$csrc/third_party/WebKit
elif [ -d "$src/$view/src/third_party/WebKit" ]
then
  wk=$src/$view/src/third_party/WebKit
fi

if [ -z "$view" ]
then
    echo "not in a view"
    exit 1
fi

case $view in
    svn) echo "syncing everything for $view"; gclient sync -j 8 ; exit 0 ;;
    dev|dev2|master) true ;;
    wk) echo "updating webkit"; update-webkit ; exit 0 ;;
    *) echo "error: unknown view '$view'; don't know how to sync"
       exit 0 ;;
esac

echo "syncing chromium for $view"
cd $csrc
if [ `git status -s -u no | wc -l` -ne 0 ]
then
  echo "warning ... working directory is dirty. Skipping update."
  exit 1
fi

git pull || exit $?

if [ `$GIT config svn-remote.svn.url 2> /dev/null | wc -l` -eq 1 ]
then
  echo " .. rebasing from SVN"
  git svn rebase -l || exit 1
fi

echo
echo "syncing webkit for $view"
cd $wk
if [ `git status -s -u no | wc -l` -ne 0 ]
then
  echo "warning ... working directory is dirty. Skipping update."
  exit 1
fi

git pull || exit $?

if [ `$GIT config svn-remote.svn.url 2> /dev/null | wc -l` -eq 1 ]
then
  echo " .. rebasing from SVN"
  git svn rebase || exit $?
fi

echo "syncing deps for $view"
gclient sync -j 8
