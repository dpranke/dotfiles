#!/usr/bin/env python3

import re
import sys


def usage():
    print(
        "usage: fl [-h|--help] <slice>[,<slice>]* fields [file]",
        file=sys.stderr
    )


def main():
    args = sys.argv[1:]
    if not args or len(args) > 2 or args[0] in ('-h', '--help'):
        usage()
        sys.exit(2)

    if len(args) > 1 and args[1] != '-':
        fp = open(args[1])
    else:
        fp = sys.stdin

    flds, err = parse_field_spec(args[0])
    if err:
        print(err, file=sys.stderr)
        sys.exit(2)

    print_fields(flds, f)


def parse_field_spec(arg):
    flds = []

    for slice in arg.split(','):
        m = re.match(r'(-?\d*):(-?\d*)', slice)
        if m:
            start = int(m.group(1)) or 0
            end = int(m.group(2)) or -2
            if start > end:
                return None, 'bad field spec: %s' % arg
            flds.extend(range(start, end+1))
            continue
        m = re.match(r'(-?\d+)', slice)
        if m:
            flds.append(int(m.group(1)))
            continue
        return None, f"Bad field spec: '{arg}'"
    return flds, None


def print_fields(flds, fp):
    for l in fp:
        cols = l.split()
        print(' '.join(cols[f] for f in flds))


if __name__ == '__main__':
    main()
