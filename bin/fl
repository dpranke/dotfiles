#!/usr/bin/env python

import re
import sys

def main():
    args = sys.argv[1:]
    if not args or len(args) > 2:
        print >> sys.stderr, "usage: fl fields [file]"
        sys.exit(1)

    if len(args) > 1 and args[1] != '-':
        f = open(args[1])
    else:
        f = sys.stdin

    flds, err = parse_field_spec(args[0])
    if err:
        print >> sys.stderr, err
        sys.exit(1)

    print_fields(flds, f)


def parse_field_spec(arg):
    flds = []

    for slice in arg.split(','):
        m = re.match('([-\d]*):([-\d]*)', slice)
        if m:
            start = int(m.group(1)) or 0
            end = int(m.group(2)) or -2
            if start > end:
                return None, 'bad field spec: %s' % arg
            flds.extend(range(start, end+1))
            continue
        m = re.match('([-\d]+)', slice)
        if m:
            flds.append(int(m.group(1)))
            continue
        return None, 'bad field spec: %s' % args
    return flds, None

def print_fields(flds, f, writer=None):
    def default_writer(s):
        print s

    writer = writer or default_writer
    for l in f.readlines():
        cols = l.split()
        writer(' '.join(cols[f] for f in flds))

if __name__ == '__main__':
    main()
