#!/usr/bin/env python

from __future__ import print_function

import argparse
import os
import subprocess
import sys

def call(cmd, cwd=None):
    proc = subprocess.Popen(cmd, stdout=subprocess.PIPE,
                            stderr=subprocess.PIPE, cwd=cwd)
    out, err = proc.communicate()
    return proc.returncode, out, err

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('-c', '--check', action='store_true')
    args = parser.parse_args()

    _, out, _ = call(['gclient', 'revinfo'])
    repos = {}
    for l in out.splitlines():
        flds = l.split()
        repos[flds[0][:-1]] = flds[1]

    status = 0
    for repo in sorted(repos):
        if args.check:
            commitish = repos[repo]
            repo_dir = os.path.join(os.getcwd(), '..', repo)
            if commitish != 'None':
                ret, out, err = call(['git', 'status', '--short'], cwd=repo_dir)
                if out:
                    print("%s:" % repo)
                    for l in out.splitlines():
                      print("  %s" % l)
                status = 1
        else:
            print(repo)

    return status


if __name__ == '__main__':
    try:
        sys.exit(main())
    except KeyboardInterrupt:
        print("interrupted, exiting", file=sys.stderr, flush=True)
        sys.exit(130)
