#!/usr/bin/env python

import optparse
import subprocess
import re
import sys

parser = optparse.OptionParser()
parser.add_option("-a", "--all-branches", action="store_true")
options, args = parser.parse_args()

branches = subprocess.check_output(["git", "branch"]).splitlines()
config_lines = subprocess.check_output(["git", "config", "-l"]).splitlines()
upstream_regex = re.compile("branch.([^.]+).merge=refs/heads/(.+)")
children = {}

current_branch = ''
for b in branches:
    stripped_branch = b.replace('*', '').strip()
    if '*' in b:
        current_branch = stripped_branch
    children[stripped_branch] = []
for cl in config_lines:
    m = upstream_regex.match(cl)
    if m:
        name = m.group(1)
        upstream = m.group(2)
        if name == upstream:
            continue
        children.setdefault(upstream, [])
        children[upstream].append(name)

seen = set([])

def walk(children, cur, depth):
    seen.add(cur)
    if options.all_branches or not (cur.endswith('-landed') or cur.endswith('-old')):
        print "%s%s%s" % ("* " if cur == current_branch else "  ", "  " * depth, cur)
    for c in sorted(children[cur]):
        walk(children, c, depth+1)

walk(children, "master", 0)
for b in set(children).difference(seen):
    print "%s?? %s??" % (b, children.get(b, ''))

